<%- include('../partials/admin/admin-header.ejs') %>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Categories</h2>
            <p>Add, edit or delete a category</p>
        </div>
        <div>
            <input type="text" placeholder="Search Categories" class="form-control bg-white">
        </div>
    </div>
    <div class="card">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <form method="post" action="/admin/category" onsubmit="return handleFormSubmit(event)">
                        <div class="mb-4">
                            <label for="product_name" class="form-label">Name</label>
                            <input type="text" name="name" placeholder="Type here" class="form-control" id="product_name" />
                            <span class="error-message" id="name-error" style="display:none;color:red;"></span>
                        </div>
                        <!-- <div class="mb-4">
                            <label for="product_slug" class="form-label">Slug</label>
                            <input type="text" name="slug" placeholder="Type here" class="form-control" id="product_slug" />
                        </div> -->
                        <!-- <div class="mb-4">
                            <label class="form-label">Parent</label>
                            <select class="form-select">
                                <option>Clothes</option>
                                <option>T-Shirts</option>
                            </select>
                        </div> -->
                        <div class="mb-4">
                            <label class="form-label">Description</label>
                            <textarea name="description" placeholder="Type here" class="form-control" id="description"></textarea>
                            <span class="error-message" id="description-error" style="display:none;color:red;"></span>
                        </div>
                        <div class="d-grid">
                            <button class="btn btn-primary">Create category</button>
                        </div>
                    </form>
                </div>
                <div class="col-md-9">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th class="text-center">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" />
                                        </div>
                                    </th>
                                    <th>Name</th>
                                    <th>Description</th>
                                    <th>Status</th>
                                    <th>Offer</th>
                                    <th class="text-end">Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% cat.reverse().forEach( (category,index)=>{ %>
                                <tr>
                                    <td class="text-center">
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" />
                                        </div>
                                    </td>
                                    <td><b><%= category.name %></b></td>
                                    <td><%= category.description %></td>
                                    <% if(category.isListed) {%>
                                    <td>List</td>
                                    <% }else {%>
                                        <td>Unlist</td>
                                        <% } %>
                                    <td>
                                        <% if(category.categoryOffer){ %>
                                            <%= category.categoryOffer %>
                                            <% }else { %>
                                                0%
                                            <% } %>
                                    </td>
                                    <td class="text-end">
                                        <div class="dropdown">
                                            <a href="#" data-bs-toggle="dropdown" class="btn btn-light rounded btn-sm font-sm"> <i class="material-icons md-more_horiz"></i> </a>
                                            <div class="dropdown-menu">
                                                <a class="dropdown-item" href="#">View detail</a>
                                                <a class="dropdown-item" href="/admin/editCategory?id=<%= category._id %>">Edit info</a>
                                                <a class="dropdown-item text-danger" href="#">Delete</a>
                                                <% if(category.isListed) {%>
                                                <a class="dropdown-item text-danger" href="/admin/listCategory?id=<%=category._id%>">Unlist</a>
                                                <% }else {%>
                                                    <a class="dropdown-item text-danger" href="/admin/unlistCategory?id=<%=category._id%>">List</a>
                                                    <% } %>
                                                <% if(category.categoryOffer === 0){ %>
                                                <a class="dropdown-item" href="#" onclick="addOffer('<%=category._id%>')">Add Offer</a>
                                                <% }else{ %>
                                                    <a class="dropdown-item" href="#" onclick="removeOffer('<%=category._id%>')">Remove Offer</a>
                                                <% } %>
                                            </div>
                                        </div> <!-- dropdown //end -->
                                    </td>
                                </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div> <!-- .col// -->
            </div> <!-- .row // -->
        </div> <!-- card body .// -->
    </div> <!-- card .// -->
</section>
<%- include('../partials/admin/admin-footer.ejs') %>

<script>
    function handleFormSubmit(event) {
        event.preventDefault();
        if (!validateForm()) {
            return;
        }

        const name = document.getElementsByName('name')[0].value;
        const description = document.getElementById('description').value;

        fetch('/admin/addCategory', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ name, description })
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                throw new Error(data.error);
            }
            location.reload();
        })
        .catch(error => {
            if (error.message === 'Category already exists') {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops',
                    text: 'Category already exists',
                });
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops',
                    text: 'An error occurred while adding the category',
                });
            }
        });
    }

    function validateForm() {
        clearErrorMessages();
        const name = document.getElementsByName('name')[0].value.trim();
        const description = document.getElementById('description').value.trim();
        let isValid = true;

        if (name === '') {
            displayErrorMessage("name-error", "Please enter a name");
            isValid = false;
        } else if (!/^[a-zA-Z\s]+$/.test(name)) {
            displayErrorMessage("name-error", "Category name should contain only alphabetic characters");
            isValid = false;
        }

        if (description === '') {
            displayErrorMessage("description-error", "Please enter a description");
            isValid = false;
        }
        return isValid;
    }

    function displayErrorMessage(elementId, message) {
        const errorElement = document.getElementById(elementId);
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }

    function clearErrorMessages() {
        const errorElements = document.getElementsByClassName("error-message");
        Array.from(errorElements).forEach((element) => {
            element.innerText = "";
            element.style.display = 'none';
        });
    }

    async function addOffer(categoryId) {
        const { value: amount } = await Swal.fire({
            title: "Offer in percentage",
            input: "number",
            inputLabel: "Percentage",
            inputPlaceholder: "%",
        });

        if (amount) {
            try {
                const response = await fetch('/admin/addCategoryOffer', {
                    method: 'POST',
                    headers: {
                        'content-type': 'application/json',
                    },
                    body: JSON.stringify({
                        percentage: amount,
                        categoryId: categoryId,
                    }),
                });

                const data = await response.json();
                if (response.ok && data.status === true) {
                    Swal.fire(
                        "Offer added",
                        "The offer has been added",
                        "success",
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire("Failed", data.message || "Adding offer failed", "error");
                }

            } catch (error) {
                Swal.fire(
                    'Error',
                    'An error occurred while adding the offer',
                    'error',
                );
                console.log("Error adding offer", error);
            }
        }
    }

    async function removeOffer(categoryId) {
        try {
            const response = await fetch('/admin/removeCategoryOffer', {
                method: 'POST',
                headers: {
                    'content-type': 'application/json'
                },
                body: JSON.stringify({
                    categoryId: categoryId,
                })
            });

            const data = await response.json();

            if (response.ok && data.status === true) {
                Swal.fire(
                    "Offer removed",
                    "Offer has been removed",
                    "success",
                ).then(() => {
                    location.reload();
                });
            } else {
                Swal.fire("Failed", data.message || "Removing offer failed", "error");
            }

        } catch (error) {
            Swal.fire(
                "Error",
                "An error occurred while removing the offer",
                "error",
            );
            console.log("Error removing offer", error);
        }
    }
</script>
