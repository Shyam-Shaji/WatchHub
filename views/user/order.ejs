<%- include('../partials/user/header.ejs') -%>

<style>
    table {
        border-collapse: collapse;
        width: 100%;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }

    th, td {
        padding: 12px;
        text-align: center;
        vertical-align: middle;
        border: 1px solid #dee2e6;
    }

    thead th {
        background-color: #343a40;
        color: #fff;
        text-transform: uppercase;
    }

    tbody tr:nth-child(even) {
        background-color: #f8f9fa;
    }

    tbody tr:hover {
        background-color: #f1f3f5;
    }

    td .text-start {
        text-align: left;
    }

    td p {
        margin-bottom: 5px;
        font-size: 0.85rem;
        line-height: 1.4;
    }

    td p strong {
        color: #495057;
    }

    @media screen and (max-width: 768px) {
        table, thead, tbody, th, td, tr {
            display: block;
        }

        th {
            background-color: #f8f9fa;
            font-weight: bold;
            padding: 10px;
        }

        td {
            border-bottom: 1px solid #ccc;
            padding: 10px;
            text-align: left;
        }

        td .text-start {
            padding-left: 5px;
        }
    }
</style>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/" rel="nofollow">Home</a>
                <span></span> Account
            </div>
        </div>
    </div>
    <section class="pt-150 pb-150">
        <div class="container">
            <div class="row">
                <div class="col-lg-10 m-auto">
                    <div class="card shadow p-4">
                        <h3 class="mb-4 text-center">Order Details</h3>
                        <% if (orders && orders.length > 0) { %>
                            <div class="table-responsive">
                                <table class="table table-bordered table-hover align-middle">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>#</th>
                                            <th>Order Date</th>
                                            <th>Status</th>
                                            <th>Items</th>
                                            <th>Address</th>
                                            <th>Total</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% orders.forEach((order, index) => { %>
                                            <tr>
                                                <td><%= index + 1 %></td>
                                                <td><%= order.orderDate.toDateString() %></td>
                                                <td>
                                                    <span class="badge <%= order.status === 'Cancelled' ? 'bg-danger' : order.status === 'Returned' ? 'bg-warning' : 'bg-success' %>">
                                                        <%= order.status %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <% order.items.forEach(item => { %>
                                                        <div class="d-flex mb-2 align-items-center">
                                                            <img src="/uploads/re-image/<%= item.product ? item.product.productImage[0] : '' %>" 
                                                                 alt="<%= item.product ? item.product.productName : 'Product not found' %>"
                                                                 class="rounded me-2" width="50" height="50">
                                                            <div>
                                                                <span><%= item.product ? item.product.productName : 'Not Found' %></span><br>
                                                                <small>Qty: <%= item.quantity %></small>
                                                            </div>
                                                        </div>
                                                    <% }) %>
                                                </td>
                                                <td>
                                                    <div class="text-start">
                                                        <p class="mb-1"><strong>Name:</strong> <%= order.address.name %></p>
                                                        <p class="mb-1"><strong>Street:</strong> <%= order.address.street %></p>
                                                        <p class="mb-1"><strong>City:</strong> <%= order.address.city %></p>
                                                        <p class="mb-1"><strong>State:</strong> <%= order.address.state %></p>
                                                        <p class="mb-1"><strong>Pin Code:</strong> <%= order.address.pincode %></p>
                                                        <p class="mb-0"><strong>Phone:</strong> <%= order.address.phone %></p>
                                                    </div>
                                                </td>
                                                <td><strong>$<%= order.totalAmount %></strong></td>
                                                <td>
                                                    <div class="d-flex flex-wrap gap-2">
                                                        <a class="btn btn-sm btn-primary" href="/orderDetail/<%= order._id %>">View Details</a>
                                                        <% if (order.status === 'Completed') { %>
                                                            <a class="btn btn-sm btn-info" href="/invoice/<%= order._id %>">Invoice</a>
                                                        <% } %>
                                                        
                                                
                                                        <% if (order.status === 'Completed') { %>
                                                            <!-- Show Return Button if status is 'Completed' -->
                                                            <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#returnModal" data-order-id="<%= order.orderId %>">
                                                                Return
                                                            </button>
                                                        <% } else if (order.status === 'Payment Pending') { %>
                                                            <!-- Show Retry Payment Button if status is 'Payment Pending' -->
                                                            <button class="btn btn-sm btn-secondary" onclick="retryPayment('<%= order._id %>')">
                                                                Retry Payment
                                                            </button>
                                                        <% } else if (order.status !== 'Cancelled' && order.status !== 'Returned') { %>
                                                            <!-- Show Cancel Button for all other statuses except 'Cancelled' and 'Returned' -->
                                                            <button class="btn btn-sm btn-danger" onclick="cancelOrder('<%= order._id %>')">
                                                                Cancel
                                                            </button>
                                                        <% } else { %>
                                                            <!-- Show status as text if the order is 'Cancelled' or 'Returned' -->
                                                            <span class="text-muted"><%= order.status %></span>
                                                        <% } %>
                                                    </div>
                                                </td>
                                                
                                                
                                                
                                            </tr>
                                        <% }) %>
                                    </tbody>
                                </table>

                                <% if (totalPages > 1) { %>
                                    <nav aria-label="Page navigation example">
                                        <ul class="pagination justify-content-center">
                                            <% if (currentPage > 1) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                                                        <span aria-hidden="true">&laquo;</span>
                                                    </a>
                                                </li>
                                            <% } %>
                                            
                                            <% for (let i = 1; i <= totalPages; i++) { %>
                                                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                                                    <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                                                </li>
                                            <% } %>
                                            
                                            <% if (currentPage < totalPages) { %>
                                                <li class="page-item">
                                                    <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                                                        <span aria-hidden="true">&raquo;</span>
                                                    </a>
                                                </li>
                                            <% } %>
                                        </ul>
                                    </nav>
                                <% } %>
                                

                            </div>
                        <% } else { %>
                            <p class="text-center">No orders found.</p>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>
    

    <!-- Return Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                    <div class="modal-header">
                    <h5 class="modal-title"  id="returnModalLabel">Return Order</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="returnForm">
                        <div class="mb-3">
                            <label for="returnReason" class="form-label">Reason for Return</label>
                            <textarea class="form-control" id="returnReason" rows="3" required></textarea>
                        </div>
                        <input type="hidden" id="orderId">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit</button>
                </div>
            </div>
        </div>
    </div>
</main>







<script>
    // JavaScript function to handle order cancellation
    // JavaScript function to handle order cancellation with SweetAlert
    function cancelOrder(orderId) {
    console.log('Order ID being sent:', orderId); // Log the orderId

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to cancel this order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/cancel-order/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            })
            .then(response => response.json())
            .then(data => {
                console.log('parsed data: ',data);
                if (data.success) {
                    document.getElementById(`status-${orderId}`).innerText = 'Status: Cancelled';
                    Swal.fire('Cancelled!', 'Your order has been cancelled successfully.', 'success');
                } else {
                    Swal.fire('Failed!', 'Failed to cancel the order.', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                console.error('Cancellation failed:', data.message);
                Swal.fire('Error!', 'An error occurred while cancelling the order.', 'error');
            });
        }
    });
}



 // Set the order ID when the modal is triggered
 document.getElementById('returnModal').addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget; // Button that triggered the modal
        const orderId = button.getAttribute('data-order-id'); // Extract order ID
        document.getElementById('orderId').value = orderId; // Set order ID in the hidden input
    });

    // Submit the return request
    function submitReturn() {
    const orderId = document.getElementById('orderId').value.trim();
    const reason = document.getElementById('returnReason').value.trim();

    if (!orderId) {
        alert('Order ID is missing. Please try again.');
        return;
    }

    if (!reason) {
        alert('Please provide a reason for return.');
        return;
    }

    fetch(`/return-order/${orderId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ reason }),
    })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                alert('Your return request has been submitted.');
                location.reload(); // Reload the page to reflect changes
            } else {
                alert(data.message || 'Could not process the return request.');
            }
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Something went wrong. Please try again.');
        });

    // Close the modal after submitting
    const modalElement = document.getElementById('returnModal');
    const modalInstance = bootstrap.Modal.getInstance(modalElement);
    if (modalInstance) {
        modalInstance.hide();
    }
}


async function retryPayment(orderId) {
    console.log('Checking the order ID format:', orderId);
    try {
        const response = await fetch(`/retry-payment/${orderId}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ orderId }),
        });

        const data = await response.json();
        console.log('Retry response:', data);

        if (data.success) {
            const options = {
                key: data.razorpayKeyId,
                amount: data.order.amount,
                currency: data.order.currency,
                order_id: data.order.id,
                handler: async function (response) {
                    try {
                        const verifyResponse = await fetch(`/verify-retry-payment/${orderId}`, {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(response), // Pass the Razorpay response
                        });

                        const verifyResult = await verifyResponse.json();

                        if (!verifyResult.success) throw new Error(verifyResult.message);

                        Swal.fire({
                            icon: 'success',
                            title: 'Payment Successful',
                            text: 'Your payment retry was successful',
                        });
                        window.location.reload();
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Verification Failed',
                            text: error.message,
                        });
                    }
                },
                theme: { color: '#3399cc' },
            };
            const rzp = new Razorpay(options);
            rzp.open();
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Retry Failed',
                text: data.message,
            });
        }
    } catch (error) {
        console.error('Retry payment error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to retry the payment. Please try again later.',
        });
    }
}


</script>

<%- include('../partials/user/footer.ejs') -%>  
