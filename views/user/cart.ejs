<%- include('../partials/user/header.ejs') -%>

<style>
    .modal {
    display: none; 
    position: fixed; 
    z-index: 1; 
    left: 0;
    top: 0;
    width: 100%; 
    height: 100%; 
    overflow: auto; 
    background-color: rgba(0,0,0,0.4);
    padding-top: 60px;
}

.modal-content {
    background-color: #fff;
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 40%;
    border-radius: 10px;
}

.close-btn {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
    cursor: pointer;
}

.close-btn:hover,
.close-btn:focus {
    color: black;
    text-decoration: none;
}

.coupon-list {
    list-style: none;
    padding: 0;
    margin: 20px 0 0 0;
}

.coupon-list li {
    padding: 10px;
    background: #f9f9f9;
    margin-bottom: 10px;
    cursor: pointer;
    border: 1px solid #ddd;
    border-radius: 5px;
    transition: background-color 0.3s ease;
}

.coupon-list li:hover {
    background-color: #f1f1f1;
}

</style>

<main class="main">
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="index.html" rel="nofollow">Home</a>
                <span></span> Shop
                <span></span> Your Cart
            </div>
        </div>
    </div>
    <section class="mt-50 mb-50">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <table class="table shopping-summery text-center clean">
                            <thead>
                                <tr class="main-heading">
                                    <th scope="col">Image</th>
                                    <th scope="col">Name</th>
                                    <th scope="col">Price</th>
                                    <th scope="col">Quantity</th>
                                    <th scope="col">Subtotal</th>
                                    <th scope="col">Remove</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% if (cart && cart.items.length > 0) { %>
                                    <% cart.items.forEach(item => { %>
                                        <tr data-product-id="<%= item.productId._id %>">
                                            <!-- Product Image -->
                                            <td class="image product-thumbnail">
                                                <img src="/uploads/re-image/<%= item.productId.productImage[0] %>" alt="<%= item.productId.productName %>">
                                            </td>                                            
                                            <!-- Product Name and Description -->
                                            <td class="product-des product-name">
                                                <h5 class="product-name">
                                                    <a href="/productDetails/<%= item.productId._id %>">
                                                        <%= item.productId.productName %>
                                                    </a>
                                                </h5>
                                                <!-- para -->
                                            </td>
                                            <!-- Price -->
                                            <td class="price" data-title="Price">
                                                <span>$<%= item.price.toFixed(2) %></span>
                                            </td>
                                            <!-- Quantity with Increment and Decrement Buttons -->
                                            <td class="text-center" data-title="Stock">
                                                <div class="detail-qty border radius m-auto">
                                                    <a href="/decreaseQuantity?productId=<%= item.productId._id %>" class="qty-down"><i class="fi-rs-angle-small-down"></i></a>
                                                    <span class="qty-val"><%= item.quantity %></span>
                                                    <a href="/increaseQuantity?productId=<%= item.productId._id %>" class="qty-up"><i class="fi-rs-angle-small-up"></i></a>
                                                </div>
                                            </td>
                                            <!-- Subtotal -->
                                            <td class="text-right" data-title="Cart">
                                                <span id="subtotal-<%= item.productId._id %>">$<%= (item.quantity * item.price).toFixed(2) %></span>
                                            </td>
                                            <!-- Remove Button -->
                                            <td class="action" data-title="Remove">
                                                <a href="#" class="remove-cart" data-product-id="<%= item.productId._id %>">
                                                    <i class="fi-rs-trash"></i>
                                                </a>
                                                
                                            </td>
                                            
                                        </tr>
                                    <% }); %>
                                    <!-- Clear Cart Option -->
                                    <tr>
                                        <td colspan="6" class="text-end">
                                            <a href="/clearCart" class="text-muted"><i class="fi-rs-cross-small"></i> Clear Cart</a>
                                        </td>
                                    </tr>
                                <% } else { %>
                                    <!-- Empty Cart Message -->
                                    <tr>
                                        <td colspan="6">Your cart is empty.</td>
                                    </tr>
                                <% } %>
                            </tbody>
                            
                        </table>
                        
                    </div>
                    <div class="cart-action text-end">
                        <a class="btn  mr-10 mb-sm-15"><i class="fi-rs-shuffle mr-10"></i>Update Cart</a>
                        <a class="btn " href="/loadShopPage"><i class="fi-rs-shopping-bag mr-10"></i>Continue Shopping</a>
                    </div>
                    <div class="divider center_icon mt-50 mb-50"><i class="fi-rs-fingerprint"></i></div>
                    <div class="row mb-50">
                        <div class="col-lg-6 col-md-12">
                            <div class="heading_s1 mb-3">
                                <h4>Calculate Shipping</h4>
                            </div>
                            <p class="mt-15 mb-30">Flat rate: <span class="font-xl text-brand fw-900">5%</span></p>
                            <form class="field_form shipping_calculator">
                                <div class="form-row">
                                    <div class="form-group col-lg-12">
                                        <div class="custom_select">
                                            <select class="form-control select-active">
                                                <option value="">Choose a option...</option>
                                                <option value="AX">Aland Islands</option>
                                                <option value="AF">Afghanistan</option>
                                                <option value="AL">Albania</option>
                                                <option value="DZ">Algeria</option>
                                                <option value="AD">Andorra</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                                <div class="form-row row">
                                    <div class="form-group col-lg-6">
                                        <input required="required" placeholder="State / Country" name="name" type="text">
                                    </div>
                                    <div class="form-group col-lg-6">
                                        <input required="required" placeholder="PostCode / ZIP" name="name" type="text">
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="form-group col-lg-12">
                                        <button class="btn  btn-sm"><i class="fi-rs-shuffle mr-10"></i>Update</button>
                                    </div>
                                </div>
                            </form>
                            <div class="mb-30 mt-50">
                                <div class="heading_s1 mb-3">
                                    <h4>Apply Coupon</h4>
                                </div>
                                <div class="total-amount">
                                    <div class="left">
                                        <div class="coupon">
                                            <!-- Apply Coupon Button -->
                                            <button id="apply-coupon-btn" class="btn btn-primary btn-sm">
                                                <i class="fi-rs-label mr-10"></i>Apply Coupon
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Coupon Modal -->
                            <div id="couponModal" class="modal" style="display: none;">
                                <div class="modal-content">
                                    <span class="close-btn">&times;</span>
                                    <h4>Available Coupons</h4>
                                    <ul id="couponList" class="coupon-list">
                                        <% coupon.forEach(coupon => { %>
                                            <li class="coupon-item" data-coupon-code="<%= coupon.code %>">
                                                <strong><%= coupon.code %></strong> - 
                                                <%= coupon.discount > 0 ? coupon.discount + '% off' : coupon.description %>
                                            </li>
                                        <% }); %>
                                    </ul>
                                </div>
                            </div>
                            
                        </div>
                        <div class="col-lg-6 col-md-12">
                            <div class="border p-md-4 p-30 border-radius cart-totals">
                                <div class="heading_s1 mb-3">
                                    <h4>Cart Totals</h4>
                                </div>
                                <div class="table-responsive">
                                    <table class="table">
                                        <tbody>
                                            <tr>
                                                <td class="cart_total_label">Cart Subtotal</td>
                                                <td class="cart_total_amount"><span class="font-lg fw-900 text-brand">$<%= subtotal.toFixed(2) %></span></td>
                                            </tr>
                                            <tr>
                                                <td class="cart_total_label">Shipping</td>
                                                <td class="cart_total_amount"><i class="ti-gift mr-5"></i> Flat Rate: <span>$<%= shipping.toFixed(2) %></span></td>
                                            </tr>
                                            <tr>
                                                <td class="cart_total_label">Total</td>
                                                <td class="cart_total_amount"><strong><span class="font-xl fw-900 text-brand">$<%= total.toFixed(2) %></span></strong></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                                <a href="/checkoutPage" class="btn"><i class="fi-rs-box-alt mr-10"></i> Proceed To CheckOut</a>
                            </div>
                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</main>

<script>
   document.querySelectorAll('.qty-up').forEach(button => {
    button.addEventListener('click', async (event) => {
        event.preventDefault();

        // Retrieve product ID and set action for increasing quantity
        const productId = event.target.closest('tr').dataset.productId;
        const action = 'increase';

        try {
            const response = await fetch(`/updateQuantity?productId=${productId}&action=${action}`);
            if (!response.ok) throw new Error("Network response was not ok");

            const data = await response.json();

            if (data.success) {
                // Update quantity and subtotal in the DOM
                const qtyValElement = event.target.closest('tr').querySelector('.qty-val');
                qtyValElement.textContent = data.newQuantity;
                const subtotalElement = document.querySelector(`#subtotal-${productId}`);
                subtotalElement.textContent = `$${data.newSubtotal.toFixed(2)}`;
            } else {
                // Show warning if quantity limit is reached
                Swal.fire({
                    icon: 'warning',
                    title: 'Quantity Limit',
                    text: data.message || "An error occurred with the quantity limit.",
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error("Error during quantity increase:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "An error occurred while updating the quantity. Please try again.",
                confirmButtonColor: '#d33'
            });
        }
    });
});

document.querySelectorAll('.qty-down').forEach(button => {
    button.addEventListener('click', async (event) => {
        event.preventDefault();

        // Retrieve product ID and set action for decreasing quantity
        const productId = event.target.closest('tr').dataset.productId;
        const action = 'decrease';

        try {
            const response = await fetch(`/updateQuantity?productId=${productId}&action=${action}`);
            if (!response.ok) throw new Error("Network response was not ok");

            const data = await response.json();

            if (data.success) {
                // Update quantity and subtotal in the DOM
                const qtyValElement = event.target.closest('tr').querySelector('.qty-val');
                qtyValElement.textContent = data.newQuantity;
                const subtotalElement = document.querySelector(`#subtotal-${productId}`);
                subtotalElement.textContent = `$${data.newSubtotal.toFixed(2)}`;
            } else {
                // Show warning if quantity limit is reached
                Swal.fire({
                    icon: 'warning',
                    title: 'Quantity Limit',
                    text: data.message || "An error occurred with the quantity limit.",
                    confirmButtonColor: '#3085d6'
                });
            }
        } catch (error) {
            console.error("Error during quantity decrease:", error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "An error occurred while updating the quantity. Please try again.",
                confirmButtonColor: '#d33'
            });
        }
    });
});

document.querySelectorAll('.remove-cart').forEach(button => {
    button.addEventListener('click', async (event) => {
        event.preventDefault();

        const productId = event.target.closest('a').dataset.productId;

        // Show SweetAlert confirmation dialog
        const result = await Swal.fire({
            title: 'Are you sure?',
            text: 'Do you want to remove this item from the cart?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonText: 'Yes, remove it!',
            cancelButtonText: 'Cancel',
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6'
        });

        if (result.isConfirmed) {
            try {
                // Proceed with the removal if confirmed
                const response = await fetch('/removeFromCart', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ productId }), // Send productId in the request body
                });

                const data = await response.json();
                if (data.success) {
                    // Remove the item from the DOM (e.g., remove the row)
                    const rowToRemove = event.target.closest('tr');
                    rowToRemove.remove(); // Or you can update the cart summary
                    Swal.fire({
                        icon: 'success',
                        title: 'Removed!',
                        text: 'The item has been removed from your cart.',
                        confirmButtonColor: '#3085d6'
                    });
                } else {
                    // Handle failure (e.g., display error message)
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || "An error occurred while removing the item.",
                        confirmButtonColor: '#d33'
                    });
                }
            } catch (error) {
                console.error("Error during removing item from cart:", error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: "An error occurred while updating the cart. Please try again.",
                    confirmButtonColor: '#d33'
                });
            }
        } else {
            // User canceled, no action taken
            console.log('Item removal canceled');
        }
    });
});

//coupon
// Show modal and fetch coupons on button click
document.getElementById('apply-coupon-btn').addEventListener('click', async () => {
    try {
        const response = await fetch('/getCoupons'); // API endpoint for fetching coupons
        const data = await response.json();
        console.log('Coupons fetched:', data);

        if (data.success) {
            const couponModal = document.getElementById('couponModal');
            const couponList = document.getElementById('couponList');
            couponList.innerHTML = ''; // Clear existing coupons

            // Populate coupons
            data.coupons.forEach(coupon => {
                const listItem = document.createElement('li');
                listItem.textContent = `${coupon.code} - ${coupon.offerPrice} off`;
                listItem.dataset.couponCode = coupon.code;
                listItem.className = 'coupon-item';
                couponList.appendChild(listItem);
            });

            // Show modal
            couponModal.style.display = 'block';

            // Add click functionality for each coupon
            document.querySelectorAll('.coupon-item').forEach(item => {
                item.addEventListener('click', () => {
                    applyCoupon(item.dataset.couponCode);
                });
            });
        } else {
            alert('Failed to fetch coupons. Please try again.');
        }
    } catch (error) {
        console.error("Error fetching coupons:", error);
        alert('An error occurred while fetching coupons.');
    }
});


// Close modal on button click
document.querySelector('.close-btn').addEventListener('click', () => {
    document.getElementById('couponModal').style.display = 'none';
});

// Apply selected coupon
async function applyCoupon(couponCode) {
    try {
        const response = await fetch('/applyCoupon', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ couponCode }),
        });

        if (!response.ok) {
            throw new Error('Failed to fetch coupon data');
        }

        const data = await response.json();
        if (data.success) {
            alert(`Coupon applied successfully! Discount: ${data.discount}`);
            document.getElementById('couponModal').style.display = 'none';
            
        } else {
            alert(data.message || 'Failed to apply coupon.');
        }
    } catch (error) {
        console.error("Error applying coupon:", error);
        alert('An error occurred while applying the coupon.');
    }
}

</script>


<%- include('../partials/user/footer.ejs') -%>