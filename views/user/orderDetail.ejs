<%- include('../partials/user/header.ejs') -%>

<style>
    /* Existing styles remain the same */
    .item-actions {
        display: flex;
        gap: 10px;
        margin-top: 10px;
    }
</style>

<div class="container order-container">
    <h2 class="mb-4 text-center">Order Details</h2>

    <!-- Order Information -->
    <div class="info-section">
        <p><strong>Order ID:</strong><%= order._id %></p>
        <p><strong>Order Date:</strong><%= order.orderDate.toDateString() %></p>
        <p><strong>Order Status:</strong> <span class="order-status"><%= order.status %></span></p>
    </div>

    <hr>

    <!-- Product Information -->
    <div class="row align-items-center mb-4">
        <% order.items.forEach(item => { %>
            <div class="col-md-3">
                <img src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                     alt="<%= item.product.productName %>" 
                     class="img-fluid product-image">
            </div>
            <div class="col-md-9">
                <h4><%= item.product.productName %></h4>
                <p><strong>Brand:</strong> <%= item.product.brand %></p>
                <p><strong>Quantity:</strong> <%= item.quantity %></p>
                <p><strong>Price:</strong> â‚¹<%= item.product.salePrice %></p>
                
                <div class="item-actions">
                    <% if (item.itemStatus !== 'Cancelled') { %>
                        <!-- Individual Cancel Button -->
                        <button class="btn btn-sm btn-danger mb-2" 
                                onclick="cancelOrderItem('<%= order._id %>', '<%= item._id %>')">
                            Cancel Item
                        </button>

                        <!-- Individual Return Button (only if order is Completed) -->
                        <% if (order.status === 'Completed') { %>
                            <button class="btn btn-sm btn-warning mb-2" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="#returnItemModal" 
                                    data-order-id="<%= order._id %>" 
                                    data-item-id="<%= item._id %>">
                                Return Item
                            </button>
                        <% } %>
                    <% } else { %>
                        <span class="text-muted">Cancelled</span>
                    <% } %>
                </div>
                
                <span id="item-status-<%= item._id %>">
                    <%= item.itemStatus === 'Cancelled' ? 'Cancelled' : '' %>
                </span>
            </div>
        <% }) %>
    </div>

    <hr>

    <!-- Existing Shipping Details and other sections remain the same -->
</div>

<!-- Return Item Modal -->
<div class="modal fade" id="returnItemModal" tabindex="-1" aria-labelledby="returnItemModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="returnItemModalLabel">Return Item</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="returnItemForm">
                    <div class="mb-3">
                        <label for="returnItemReason" class="form-label">Reason for Return</label>
                        <textarea class="form-control" id="returnItemReason" rows="3" required></textarea>
                    </div>
                    <input type="hidden" id="returnOrderId">
                    <input type="hidden" id="returnItemId">
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" onclick="submitItemReturn()">Submit</button>
            </div>
        </div>
    </div>
</div>

<script>
    // Existing cancelOrderItem function remains the same
    // Function to cancel an individual order item
function cancelOrderItem(orderId, itemId) {
    if (!confirm('Are you sure you want to cancel this item?')) {
        return;
    }

    fetch(`/cancel-order-item/${orderId}/${itemId}`, { 
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Item cancelled successfully!');
            
            // Update the item status text in the UI
            const itemStatusElement = document.getElementById(`item-status-${itemId}`);
            if (itemStatusElement) {
                itemStatusElement.textContent = 'Cancelled';
                itemStatusElement.className = 'text-danger';
            }

            // Disable the cancel button to prevent duplicate requests
            const cancelButton = document.querySelector(`button[onclick="cancelOrderItem('${orderId}', '${itemId}')"]`);
            if (cancelButton) {
                cancelButton.disabled = true;
                cancelButton.textContent = 'Cancelled';
            }
        } else {
            alert(`Error: ${data.message}`);
        }
    })
    .catch(error => {
        console.error('Error cancelling the item:', error);
        alert('An unexpected error occurred. Please try again.');
    });
}


    // New function to handle individual item return
    function submitItemReturn() {
        const orderId = document.getElementById('returnOrderId').value.trim();
        const itemId = document.getElementById('returnItemId').value.trim();
        const reason = document.getElementById('returnItemReason').value.trim();

        if (!orderId || !itemId) {
            alert('Order or Item ID is missing. Please try again.');
            return;
        }

        if (!reason) {
            alert('Please provide a reason for return.');
            return;
        }

        fetch(`/return-order-item/${orderId}/${itemId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ reason }),
        })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                alert('Your item return request has been submitted.');
                location.reload(); // Reload the page to reflect changes
            } else {
                alert(data.message || 'Could not process the return request.');
            }
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Something went wrong. Please try again.');
        });

        // Close the modal
        const modalElement = document.getElementById('returnItemModal');
        const modalInstance = bootstrap.Modal.getInstance(modalElement);
        if (modalInstance) {
            modalInstance.hide();
        }
    }

    // Event listener to set order and item IDs when modal is triggered
    document.getElementById('returnItemModal').addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget; // Button that triggered the modal
        const orderId = button.getAttribute('data-order-id');
        const itemId = button.getAttribute('data-item-id');
        
        document.getElementById('returnOrderId').value = orderId;
        document.getElementById('returnItemId').value = itemId;
    });
</script>

<%- include('../partials/user/footer.ejs') -%>