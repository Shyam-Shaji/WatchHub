<%- include('../partials/user/header.ejs') -%>

<style>
    body {
      background-color: #f8f9fa;
    }

    .order-container {
      background-color: #fff;
      border-radius: 10px;
      padding: 30px;
      box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.1);
      margin-top: 30px;
    }

    .order-status {
      font-weight: bold;
      color: #28a745;
    }

    .product-image {
      max-width: 150px;
      border: 1px solid #ddd;
      border-radius: 10px;
    }

    .info-section {
      padding: 15px 0;
    }

    .info-section strong {
      display: inline-block;
      width: 150px;
    }

    .btn-primary {
      background-color: #007bff;
      border: none;
    }

    .btn-primary:hover {
      background-color: #0056b3;
    }
  </style>
</head>
<body>

  <div class="container order-container">
    <h2 class="mb-4 text-center">Order Details</h2>

    <!-- Order Information -->
    <div class="info-section">
      <p><strong>Order ID:</strong><%= order._id %></p>
      <p><strong>Order Date:</strong><%= order.orderDate.toDateString() %></p>
      <p><strong>Order Status:</strong> <span class="order-status"><%= order.status %></span></p>
    </div>

    <hr>

    <!-- Product Information -->
    <div class="row align-items-center mb-4">
      <div class="row align-items-center mb-4">
        <% order.items.forEach(item => { %>
          <div class="col-md-3">
            <img src="/uploads/re-image/<%= item.product.productImage[0] %>" 
                 alt="<%= item.product.productName %>" 
                 class="img-fluid product-image">
          </div>
          <div class="col-md-9">
            <h4><%= item.product.productName %></h4>
            <p><strong>Brand:</strong> <%= item.product.brand %></p>
            <p><strong>Quantity:</strong> <%= item.quantity %></p>
            <p><strong>Price:</strong> â‚¹<%= item.product.salePrice %></p>
          </div>
        <% }) %>
      </div>
      
    </div>

    <hr>

    <!-- Shipping Details -->
    <div class="info-section">
      <h5>Shipping Details</h5>
      <p><strong>Name:</strong> <%= order.address.name %></p>
      <p><strong>Name:</strong> <%= order.address.name %></p>
      <p><strong>City:</strong> <%= order.address.city %></p>
      <p><strong>State:</strong> <%= order.address.state %></p>
      <p><strong>Pin Code:</strong> <%= order.address.pincode %></p>
      <p><strong>Phone:</strong> <%= order.address.phone %></p>
    </div>

    <hr>

    <!-- Action Buttons -->
    <div class="d-flex justify-content-end">
      <% if (order.status === 'Completed') { %>
        <!-- Show Return Button if status is 'Completed' -->
        <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#returnModal" data-order-id="<%= order.orderId %>">
            Return
        </button>
    <% } else if (order.status !== 'Cancelled' && order.status !== 'Returned') { %>
        <!-- Show Cancel Button for all other statuses except 'Cancelled' and 'Returned' -->
        <button class="btn btn-sm btn-danger mb-2" onclick="cancelOrder('<%= order.orderId %>')">
            Cancel
        </button>
    <% } else { %>
        <!-- Show status as text if the order is 'Cancelled' or 'Returned' -->
        <span class="text-muted"><%= order.status %></span>
    <% } %>
    </div>
  </div>

  <script>
    function cancelOrder(orderId) {
    console.log('Order ID being sent:', orderId); // Log the orderId

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you really want to cancel this order?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch(`/cancel-order/${orderId}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
            })
            .then(response => response.json())
            .then(data => {
                console.log('parsed data: ',data);
                if (data.success) {
                    document.getElementById(`status-${orderId}`).innerText = 'Status: Cancelled';
                    Swal.fire('Cancelled!', 'Your order has been cancelled successfully.', 'success');
                } else {
                    Swal.fire('Failed!', 'Failed to cancel the order.', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                console.error('Cancellation failed:', data.message);
                Swal.fire('Error!', 'An error occurred while cancelling the order.', 'error');
            });
        }
    });
}



 // Set the order ID when the modal is triggered
 document.getElementById('returnModal').addEventListener('show.bs.modal', function (event) {
        const button = event.relatedTarget; // Button that triggered the modal
        const orderId = button.getAttribute('data-order-id'); // Extract order ID
        document.getElementById('orderId').value = orderId; // Set order ID in the hidden input
    });

    // Submit the return request
    function submitReturn() {
    const orderId = document.getElementById('orderId').value.trim();
    const reason = document.getElementById('returnReason').value.trim();

    if (!orderId) {
        alert('Order ID is missing. Please try again.');
        return;
    }

    if (!reason) {
        alert('Please provide a reason for return.');
        return;
    }

    fetch(`/return-order/${orderId}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ reason }),
    })
        .then((response) => response.json())
        .then((data) => {
            if (data.success) {
                alert('Your return request has been submitted.');
                location.reload(); // Reload the page to reflect changes
            } else {
                alert(data.message || 'Could not process the return request.');
            }
        })
        .catch((error) => {
            console.error('Error:', error);
            alert('Something went wrong. Please try again.');
        });

    // Close the modal after submitting
    const modalElement = document.getElementById('returnModal');
    const modalInstance = bootstrap.Modal.getInstance(modalElement);
    if (modalInstance) {
        modalInstance.hide();
    }
}
  </script>

<%- include('../partials/user/footer.ejs') -%>